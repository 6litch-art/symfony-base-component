{% use "@Twig/Form/form_div_layout.html.twig" %}

{# Overriding the EA form overriding >( #}
{% block form_start %}

    {%- set attr = attr|merge({'class': 'needs-validation' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
    {%- set attr = attr|merge({'novalidate': 'novalidate'}) -%}
    {{ parent(attr) }}

    <input type="hidden" name="referrer" value="{{ ea.request.query.get('referrer') }}">
    {% if form.vars.errors|length > 0 and 'ea_crud' in form.vars.block_prefixes|default([]) %}
        {{ form_errors(form, {attr: { class: 'global-invalid-feedback' }}) }}
    {% endif %}
{% endblock %}

{% block form_end %}
    {% if not render_rest is defined or render_rest %}
        {{ form_rest(form) }}
    {% endif %}
    </form>
{% endblock %}

{# Overloaded form template.. #}
{%- block form2_label  -%}

    {% set badges = "" %}
    {% set badges = badges ~ (is_granted("ROLE_SUPERADMIN") and (form.vars.is_dbcolumn  ?? false) ? "fa-solid fa-fw fa-database"      |iconify({"data-toggle":"tooltip", "title":("@fields.debug.is_dbcolumn" |trans)})|first|raw : "") %}
    {% set badges = badges ~ (is_granted("ROLE_SUPERADMIN") and (form.vars.is_multiple  ?? false) ? "fa-solid fa-fw fa-clipboard-list"|iconify({"data-toggle":"tooltip", "title":("@fields.debug.is_multiple" |trans)})|first|raw : "") %}
    {% set badges = badges ~ (is_granted("ROLE_SUPERADMIN") and (form.vars.is_alias     ?? false) ? "fa-solid fa-fw fa-hashtag"       |iconify({"data-toggle":"tooltip", "title":("@fields.debug.is_alias"    |trans)})|first|raw : "") %}
    {% set badges = badges ~ (is_granted("ROLE_SUPERADMIN") and (form.vars.is_sortable  ?? false) ? "fa-solid fa-fw fa-repeat"        |iconify({"data-toggle":"tooltip", "title":("@fields.debug.is_sortable" |trans)})|first|raw : "") %}
    {% set badges = badges ~ (is_granted("ROLE_SUPERADMIN") and (form.vars.is_inherited ?? false) ? "fa-solid fa-fw fa-sitemap"       |iconify({"data-toggle":"tooltip", "title":("@fields.debug.is_inherited"|trans)})|first|raw : "") %}

    {% set label     = form_label(form, null, {'label_html': true}) %}
    {% set labelTrim = (label|trim(" ")|trim("&nbsp;")) %}

    {% if badges is not empty or labelTrim is not empty %}
    <div class="label-wrapper">
        {% if labelTrim is not empty %}

            {{- label|raw -}}
            {% if form.vars.href is defined and form.vars.href is not iterable and form.vars.href is not null and not form.vars.multiple and form.vars.value.id is defined %}
            <a href="{{form.vars.href|url_decode|replace({'{0}': form.vars.value.id })}}" target='_blank'>
                <i class="fa-solid fa-external-link-square-alt"></i>
            </a>{% endif %}

            {{- form_help(form) -}}
        {% else %}
            <label>&nbsp;</label>
        {% endif %}
        <span class="badge badge-secondary label">{{- badges|trim|raw -}}</span>
    </div>
    {% endif %}

{%- endblock -%}
{%- block form2_widget -%}{{- form_widget(form) -}}{%- endblock -%}
{%- block form2_errors -%}
    {%- set row_attr = row_attr|merge({'class': 'form-errors' ~ (row_attr.class is defined ? ' ' ~ row_attr.class : '')} ) -%}
    {% if errors|length %}
        <div {% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
        {%- if errors|length > 0 -%}
            <ul>
                {%- for error in errors -%}
                    <li><span>{{ error.message }}</span></li>
                {%- endfor -%}
            </ul>
        {%- endif -%}
        </div>
    {%- endif -%}
{%- endblock -%}

{%- block form2_help -%}
    {% if help is not empty %}
    <span class="data-help">
        <i class="fa-regular fa-question-circle" data-toggle="tooltip" data-bs-placement="right" title="{{help}}"></i>
    </span>
    {% endif %}
{%- endblock -%}

{% block form2_row -%}
    {# {%- set attr = attr|merge({'class': 'form-control' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%} #}
    {# {%- set row_attr = row_attr|merge({'class': 'form-group' ~ (row_attr.class is defined ? ' ' ~ row_attr.class : '')} ) -%} #}
    <div {% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
        <span>{{- form_label(form) -}}</span>

        {% set _form_error = form_errors(form, {row_attr:{}}) %}
        {% if _form_error is not empty %}
            {%- set attr = attr|merge({'class': 'is-invalid' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
        {% endif %}

        {{- form_widget(form, {attr:attr}) -}}
        {{- _form_error|raw -}}
    </div>
{%- endblock form2_row -%}

{# Custom FormType widgets are below.. #}
{%- block quill_row -%}
{%- set row_attr = row_attr|merge({'class': 'form-quill' ~ (row_attr.class is defined ? ' ' ~ row_attr.class : '')} ) -%}
<div {% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
    <span>{{ form_label(form) }}</span>
    {{ form_errors(form) }}
    {{ form_row(form) }}
    <div class="form-text text-muted">{{"@fields.quill.soft_linebreak"|trans}}</span></div>
</div>


{%- endblock -%}

{%- block quill_widget -%}

    {% set attr = attr|merge({
        'data-quill-field': form.vars.id,
        'data-quill-options': quill
    }) %}

    {{ form_widget(form) }}
    <div id="{{ id }}_editor" {{ block('attributes') }}>
        {{ value | raw }}
    </div>

{%- endblock quill_widget -%}

{%- block attribute_widget -%}
<div class="form-control form-attribute">

    {{ form_widget(form.choice) }}

    <div class="form-attribute-items">
        {% for fieldName in form.children|keys|filter(k => k != "choice") %}
        {{ form_widget(form.children[fieldName]) }}
        {% endfor %}
        <div class="form-text text-muted">{{"@fields.attribute.empty"|trans}}</span></div>
    </div>
</div>
{% endblock attribute_widget %}

{%- block select2_row -%}
    {%- set attr = attr|merge({'class': 'form-select2' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
    {{form_row(form, {attr:attr})}}
{%- endblock -%}

{%- block select2_widget -%}

    {% set attr = attr|merge({
        'data-select2-field'     : form.vars.id~"_choice",
        'data-select2-options'   : select2,
        'data-select2-href'      : form.vars["select2-href"]|default("")|url_decode,
        'data-select2-sortable'  : form.vars["select2-sortable"],
        'data-select2-tabulation': form.vars["tabulation"],
        'data-select2-highlight' : form.vars["highlight"]
    }) %}

    {%- set attr = attr|merge({'class': 'form-select2' ~ (form.vars.choice_thumbnails|length ? " form-select2-thumbnails ") ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
    {%- set attr = attr|merge({'disabled': form.vars.disabled ?? (form.vars.is_inherited ?? false)} ) -%}
    {%- set attr = attr|merge({'required': form.vars.required }) -%}

    {{ form_widget(form.choice, {attr: attr, row_attr:row_attr}) }}

    {% if form.vars.tokenSeparators is defined %}
    <div class="form-filesize form-text text-muted">{{"@fields.select.token_separator"|trans(["'"~form.vars.tokenSeparators|join("' '")~"'"])}}</div>
    {% endif %}

    <div class="form-choice-thumbnail" id="{{ form.vars.id~"_label" }}">
        {%- for image in form.vars.choice_thumbnails -%}
        <label id="{{ form.vars.id~"_choice_"~loop.index0 }}" class="form-choice-thumbnail-label">{{ image|thumbnail(500,500)|imagify }}</label>
        {%- endfor -%}
    </div>

{% endblock select2_widget %}

{%- block discriminator_row -%}
    {%- set attr = attr|merge({'class': 'form-select2' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
    {{form_row(form)}}
{%- endblock -%}

{%- block discriminator_widget -%}
    {{ form_widget(form.choice, {attr: attr, row_attr:row_attr}) }}
{% endblock discriminator_widget %}

{%- block datetimepicker_widget -%}
    {% set attr = attr|merge({
        'data-datetimepicker-field': form.vars.id,
        'data-datetimepicker-options': datetimepicker
    }) %}

    <div class="input-group form-stock">
        <div class="input-group-text">
            <button class="btn btn-outline-secondary" type="button" id="{{form.vars.id}}-btn">
                <i class="fa-solid fa-calendar-day"></i>
            </button>
        </div>

        {{ form_widget(form, {attr:attr}) }}
    </div>
{% endblock datetimepicker_widget %}

{%- block translatable_row -%}
    {{ form_widget(form) }}
{%- endblock -%}

{%- block translatable_widget -%}

    {% set row_attr = row_attr|merge({'class': 'form-translatable' ~ (row_attr.class is defined ? ' ' ~ row_attr.class : '')} ) %}
    <div id="{{ form.vars['id'] }}" {% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>

    {% if form.children|length == 1 and single_locale %}

        {% for row in form.children %}
            {{ form_widget(row) }}
        {% endfor %}

    {% else %}

        {% if translations_empty is defined and translations_empty == false %}

                <ul class="nav nav-tabs" role="tablist" id="{{ form.vars['id'] }}_nav">
                {% for form_locale, form_child in form.children %}
                    {% if form_locale in form.vars.available_locales %}
                    <li class="nav-item" role="presentation">
                        {% set country = form_locale|country %}
                        <button class="nav-link {% if compatible_locale == form_locale %}active{% endif %} {% if not(form_locale in nonempty_locales) %}muted{% endif %}" id="{{ form.vars['id']~"_"~form_locale}}-tab" data-bs-toggle="tab" data-bs-target="#{{ form.vars['id']~"_"~form_locale}}" type="button" role="tab" aria-controls="{{form_locale}}" aria-selected="true">
                            <label {% if form_locale == default_locale or form_locale in required_locales %}class="required"{% endif %}>
                                <img class="country-flag {% if default_locale == form_locale %}default{% endif %}" data-src="{{asset('bundles/base/images/flags/'~ country~'.svg')}}" alt="{{ form_locale }}">
                            </label>
                        </button>
                    </li>
                    {% endif %}
                {% endfor %}
                </ul>

                <div class="tab-content" id="{{ form.vars['id'] }}_tab">
                {% for form_locale, formChild in form.children %}
                    {% if form_locale in form.vars.available_locales %}
                        <div class="tab-pane fade {% if compatible_locale == form_locale %}show active{% endif %}" id="{{ form.vars['id']~"_"~form_locale}}" role="tabpanel" aria-labelledby="{{ form.vars['id']~"_"~form_locale}}-tab">
                            {% for row in formChild %}
                                {{ form_row(row) }}
                            {% endfor %}
                        </div>
                    {% endif %}
                {% endfor %}
                </div>
        {% endif %}

    {% endif %}
    </div>
{%- endblock translatable_widget -%}

{%- block slug_widget -%}

{# Search for target inside form based on parent including translation #}
{% set targetForm = form.vars.ancestor %}
{% for child in target %}

    {% set targetForm = targetForm[child] %}

    {% if child == "translations" %}
        {% if targetForm.vars.default_locale is defined and targetForm.vars.default_locale in targetForm|keys %}
            {% set targetForm = targetForm[targetForm.vars.default_locale] %}
        {% else %}
            {% set targetForm = targetForm|first %}
        {% endif %}
    {% endif %}
{% endfor %}

{# Define slug parameters #}
{% set attr = attr|merge({
    'data-slug-field': form.vars.id,
    'data-slug-keep': keep,
    'data-slug-strict': strict,
    'data-slug-upper': upper,
    'data-slug-separator': separator,
    'data-slug-lock': lock,
    'data-slug-target': targetForm.vars.id,
    'required': form.vars.required
}) %}

<div class="input-group">
    {{ form_widget(form, {attr:attr}) }}
    <div class="input-group-append">
        <button class="input-group-text" type="button">
            <i class="fa-solid {{ target is not empty ? "fa-lock" : "fa-unlock" }} fa-fw"></i>
        </button>
    </div>
</div>

{%- endblock -%}

{%- block percent_widget -%}
    <div class="input-group">
        {{ block('form_widget') }}
        <div class="input-group-append">
            <button class="input-group-text" type="button">
                <i class="fa-solid fa-percent fa-fw"></i>
            </button>
        </div>
    </div>
{%- endblock -%}

{%- block button2_attributes -%}
    id="{{ id }}" name="{{ full_name }}"{% if disabled %} disabled="disabled"{% endif -%}
    {{ block('attributes') }}
{%- endblock button2_attributes -%}

{%- block button2_widget -%}

    {% set attr_request = attr %}
    {% set attr = attr|merge({
        'data-button-field'          : form.vars.id,
        'data-button-confirmation'   : form.vars.confirmation,
        'data-button-confirmation-bubbleup'   : form.vars.confirmation_bubbleup,
        "class": (attr.class ?? "")~" hidden btn-action"
    }) %}

    {%- if label is empty -%}
        {%- if label_format is not empty -%}
            {% set label = label_format|replace({
                '%name%': name,
                '%id%': id,
            }) %}
        {%- elseif label is not same as(false) -%}
            {% set label = name|humanize %}
        {%- endif -%}
    {%- endif -%}

    <button type="{{ type|default('button') }}" {{ block("button2_attributes") }}>
        {%- if translation_domain is same as(false) -%}
            {%- if label_html is same as(false) -%}
                {{- label -}}
            {%- else -%}
                {{- label|raw -}}
            {%- endif -%}
        {%- else -%}
            {%- if label_html is same as(false) -%}
                {{- label|trans(label_translation_parameters, translation_domain) -}}
            {%- else -%}
                {{- label|trans(label_translation_parameters, translation_domain)|raw -}}
            {%- endif -%}
        {%- endif -%}
    </button>

    <button type="button" {{ html_attributes(attr_request) }} id="{{ form.vars.id }}-request" >
        {%- if translation_domain is same as(false) -%}
            {%- if label_html is same as(false) -%}
                {{- label -}}
            {%- else -%}
                {{- label|raw -}}
            {%- endif -%}
        {%- else -%}
            {%- if label_html is same as(false) -%}
                {{- label|trans(label_translation_parameters, translation_domain) -}}
            {%- else -%}
                {{- label|trans(label_translation_parameters, translation_domain)|raw -}}
            {%- endif -%}
        {%- endif -%}
    </button>

    {% if form.vars.confirmation %}

    <div class="modal fade" id="{{ form.vars.id }}-modal" tabindex="-1" role="dialog" aria-labelledby="{{ form.vars.id }}-modal">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body">
                {{ "@fields.boolean.text"|trans }}
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="{{ form.vars.id }}-cancel" data-dismiss="modal">{{ "@fields.boolean.button.cancel"|trans }}</button>
                <button type="button" class="btn btn-primary" id="{{ form.vars.id }}-confirm">{{ "@fields.boolean.button.confirm"|trans }}</button>
            </div>
        </div>
    </div>
    </div>
    {% endif %}

{%- endblock button2_widget -%}

{%- block boolean_row -%}

    {% if form.vars.switch %}
        {%- set row_attr = row_attr|merge({'class': 'form-check form-switch' ~ (row_attr.class is defined ? ' ' ~ row_attr.class : '')} ) -%}
    {% endif %}
    {% if form.vars.inline %}
        {%- set row_attr = row_attr|merge({'class': 'inline' ~ (row_attr.class is defined ? ' ' ~ row_attr.class : '')} ) -%}
    {% endif %}

    {{ form_row(form, { row_attr: row_attr }) }}

{%- endblock -%}

{%- block boolean_widget -%}

    {% if form.vars.switch %}
        {%- set label_attr = label_attr|merge({'class': 'checkbox-switch' ~ (label_attr.class is defined ? ' ' ~ label_attr.class : '')} ) -%}
        {%- set attr = attr|merge({'class': 'form-check-input' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
    {% endif %}

    {% set attr = attr|merge({
        'data-boolean-field'                : form.vars.id,
        'data-boolean-confirmation-check'   : form.vars.confirmation_check,
        'data-boolean-confirmation-uncheck' : form.vars.confirmation_uncheck,
        'data-toggle-url'                   : form.vars.toogle_url
    }) %}

    <div class="form-checkbox">{{ form_widget(form, { attr: attr }) }}</div>

    {% if form.vars.confirmation_check or form.vars.confirmation_uncheck %}
    <div class="modal fade" id="{{ form.vars.id }}-modal" tabindex="-1" role="dialog" aria-labelledby="{{ form.vars.id }}-modal">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close" id="{{ form.vars.id }}-close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="{{ form.vars.id }}-modal-label">{{ "@fields.boolean.title" | trans([form.vars.label]) }}</h4>
            </div>
            <div class="modal-body">
                {{ "@fields.boolean.text"|trans }}
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="{{ form.vars.id }}-cancel" data-dismiss="modal">{{ "@fields.boolean.button.cancel"|trans }}</button>
                <button type="button" class="btn btn-primary" id="{{ form.vars.id }}-confirm">{{ "@fields.boolean.button.confirm"|trans }}</button>
            </div>
        </div>
    </div>
    </div>
    {% endif %}

{%- endblock -%}

{%- block avatar_widget -%}

{% set attr = attr|merge({
    'data-avatar-field'   : form.vars.id,
    'data-avatar-cropper' : form.vars.cropper,
}) %}

<div class="avatarupload" {{ block('attributes') }}>

    {{ form_widget(form, { attr: form.vars.attr }) }}

    {% if allow_delete %}
    <div id="{{id}}_deleteBtn2" class="deleteBtn" style="{% if avatar is empty %}display:none;{% endif %}">
        <i class="fa-solid fa-plus-circle fa-2x"></i>
    </div>
    {% endif %}
</div>
{%- endblock -%}

{%- block imageupload_widget -%}
{% set attr = attr|merge({
    'data-image-field'             : form.vars.id,
    'data-image-modal'             : form.vars.modal,
    'data-image-cropper'           : form.vars.cropper,
    'data-image-lightbox'          : form.vars.lightbox,
    'data-image-mimetypes'         : form.vars.mime_types|join(','),
    'data-image-thumbnail'         : form.vars.thumbnail,
    'data-image-ajax'              : form.vars.ajax,
    'data-image-maxsize'           : form.vars.max_size,
    'data-image-maxsize[feedback]' : "@fields.fileupload.max_size_feedback"   | trans(["{0}"]),
    'data-image-uploadFailed'      : "@fields.fileupload.error.cannot_upload" | trans(),
}) %}

<div class="imageupload" {{ block('attributes') }}>

    {% if not multiple %}
        <figure class="lazyload">
            <img id="{{id}}_thumbnail" style="cursor: pointer;" data-src="{{ form.vars.value | thumbnail(500,500) | default(thumbnail) }}" />
            <figcaption id="{{id}}_figcaption">
                <div class="figwrapper">
                {% if form.vars.value is not empty and form.vars.lightbox is defined and form.vars.lightbox is not empty %}
                    <span><i class="fa-solid fa-search-plus" id="{{id}}_preview"></i></span>
                    <span>{{ clipboard("copy", form.vars.value|imagine) }}</span>
                    <span><a                 href='{{ form.vars.download }}'>{{ "fa-solid fa-fw fa-download"|iconify({"style":"font-size:0.95em;bottom:3px;position:relative"})|first|raw }}</a></span>
                    <span><a target='_blank' href='{{ form.vars.value|imagine }}'>{{ "fa-solid fa-fw fa-image"|iconify|first|raw }}</a></span>
                {% else %}
                    <span><i class="fa-solid fa-plus-circle"></i></span>
                {% endif %}
                </div>
            </figcaption>

            {% if form.vars.value is not empty and form.vars.lightbox is defined and form.vars.lightbox is not empty %}
            <a href="{{form.vars.value|thumbnail(1000,1000)}}" data-lightbox='{{id}}_lightbox' id="{{id}}_lightbox" loading='lazy'></a>
            {% endif %}

        </figure>

        {% if cropper %}
        <div class="modal fade" id="{{id}}_modal">
            <div class="modal-dialog modal-dialog-centered modal-dialog modal-dialog-centered-centered">
                <div class="modal-content">
                    <div class="modal-header"><h5 class="modal-title">Image cropper</h5></div>
                    <div class="modal-body">
                        <div class="imageupload-cropper">
                            <img id="{{id}}_cropper" src="" class="imageupload-cropper-image" style="visibility:hidden">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div class="form-text text-muted">
                        {% if form.vars.max_size %}
                            {{"@fields.fileupload.max_size"|trans([form.vars.max_size|filesize])}}
                            <div id="{{id}}_modal_feedback" class="invalid-image"></div>
                        {% endif %}
                        </div>
                        <div>
                            <button type="button" class="btn btn-secondary" id="{{id}}_modalClose">{{ "@fields.boolean.button.cancel"|trans }}</button>
                            <button type="button" class="btn btn-primary" id="{{id}}_modalSave">{{ "@fields.boolean.button.confirm"|trans }}</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}
    {% endif %}

    <div class="imageupload-field">

        {% if form.alt is defined %}
            {%- set row_attr = row_attr|merge({'class': 'alt' ~ (row_attr.class is defined ? ' ' ~ row_attr.class : '')}) -%}
            {{ form_row(form.alt, {'label': form.alt.vars.label ?? "@fields.imageupload.alt"|trans, row_attr:row_attr})}}
        {% endif %}

        {{ form_widget(form, { attr: form.vars.attr }) }}
    </div>

</div>
{%- endblock -%}

{%- block fileupload_widget -%}

{% set path     = form.vars.path ?? [] %}
{% set download = form.vars.download ?? [] %}
{% set clippable = form.vars.clippable ?? [] %}

{% set lightboxIcon = path|length > 1 ? "fa-solid fa-2x fa-fw fa-search-plus" : "fa-solid fa-2x fa-fw fa-image" %}
{% set lightboxPattern = "<a href='{0}' data-lightbox='lightbox-"~id~"' loading='lazy'>"~(lightboxIcon|iconify|first|raw)~"</a>" %}
{% set downloadPattern = "<a href='{0}' >"~("fa-solid fa-2x fa-fw fa-download"|iconify({"style":"font-size: 1.8em;"})|first|raw)~"</a>" %}
{% set clipboardPattern = clipboard("copy", "{0}", {class:"fa-2x fa-fw"}) %}
{% set gotoPattern = "<a target='_blank' href='{0}'>"~("fa-solid fa-fw fa-2x fa-external-link-square-alt"|iconify|first|raw)~"</a>" %}
{% set deletePattern = allow_delete ? "<a class='warning' data-dz-remove='true'>"~("fa-regular fa-fw fa-2x fa-trash-alt"|iconify|first|raw)~"</a>" : null %}

{% set attr = attr|merge({
    'data-file-sortable'              : form.vars.sortable,
    'data-file-lightbox-options'      : form.vars.lightbox,

    'data-file-ajax'                  : form.vars.ajax,
    'data-file-href'                  : form.vars.href|default("")|url_decode,
    'data-file-max-files'             : form.vars.max_files,

    'data-file-path-links'            : path,
    'data-file-download-links'        : download,

    'data-file-clipboard'             : clipboardPattern,
    'data-file-download'              : downloadPattern,
    'data-file-lightbox'              : lightboxPattern,
    'data-file-goto'                  : gotoPattern,
    'data-file-delete'                : deletePattern,
    'data-file-clippable'             : clippable,
    'data-file-loader'                : "<div id='"~id~"_loader' class='loader'><div class='loader-spinner'></div></div>",

    'data-file-counter[none]'         : "@fields.fileupload.file_counter.none"       | trans(["{0}"]),
    'data-file-counter[singular]'     : "@fields.fileupload.file_counter._singular"   | trans(["{0}"]),
    'data-file-counter[plural]'       : "@fields.fileupload.file_counter._plural"     | trans(["{0}"]),
    'data-file-counter-max[none]'     : "@fields.fileupload.file_counter_max.none"    | trans(["{0}"]),
    'data-file-counter-max[singular]' : "@fields.fileupload.file_counter_max._singular"| trans(["{0}"]),
    'data-file-counter-max[plural]'   : "@fields.fileupload.file_counter_max._plural"  | trans(["{0}"])
}) %}

<div class="fileupload" data-file-field="{{ id }}" data-file-dropzone="{{form.vars.dropzone}}">
    <div class="field">
    {% if multiple and dropzone %}

        <div id="{{ id }}_dropzone" {{ block('attributes') }}></div>
        {{ form_widget(form.file, { id: id, value:value }) }}

    {% else %}

        {% set placeholder = '' %}
        {% set title = '' %}

        {{ form_widget(form.file, { attr: form.file.vars.attr}) }}

        {% if (allow_reupload or value is null) %}
        <div class="input-group field-raw">

            {% if form.vars.inline  %}
            <div class="input-group-prepend">
                <span class="input-group-text">
                    {{ form_label(form)}}
                </span>
            </div>
            {% endif %}

            {% if allow_url %} <div class="input-group-text">{{ "fa-solid fa-paperclip"|iconify|first|raw }}</div>{% endif %}
            {{ form_widget(form.raw, { attr: form.raw.vars.attr|merge({'class': (files is empty ? 'last' : "") ~ (form.raw.vars.attr.class is defined ? ' ' ~ form.raw.vars.attr.class : ''), accept: mime_types|join(',') }) }) }}
            {% if allow_delete and not form.vars.disabled %}
            <div id="{{id}}_deleteBtn" class="input-group-text deleteBtn {% if files is empty %}hidden{% endif %}">
                <span style="cursor:pointer;">&#x2715;</span>
            </div>
            {% endif %}
        </div>
        {% endif %}

        {% if (allow_url) %}
        <div class="input-group field-url">
            <div class="input-group-text">{{ "fa-solid fa-link"|iconify|first|raw }}</div>
            {{ form_widget(form.url, { attr: form.url.vars.attr|merge({'placeholder': ("@fields.fileupload.download_placeholder"|trans)}) }) }}
        </div>
        {% endif %}

    {% endif %}
    </div>

    {% set exts = form.vars.mime_types|extensions %}

    {% if form.vars.max_size %}
        <div class="form-filesize form-text text-muted">{{"@fields.fileupload.max_size"|trans([form.vars.max_size|filesize])}}</div>
    {% endif %}

    {% if exts is not empty %}
        <div class="form-filesize form-text text-muted">{{"@fields.fileupload.mime_type"|trans([exts|length, exts|join(', ')|upper])}}</div>
    {% endif %}

    {%- set row_attr = row_attr|merge({'class': 'form-text text-muted' ~ (row_attr.class is defined ? ' ' ~ row_attr.class : '')} ) -%}
    {{ form_errors(form.raw, {row_attr:row_attr}) }}

    {% if multiple and form.vars.dropzone %}
    <div id="{{id}}_metadata" class="form-text text-muted">
        <div id="{{ id }}_loader" class="loader"><div class="loader-spinner"></div> {{ '@fields.fileupload.dropzone.spinner'|trans }}</div>
    </div>
    {% endif %}
</div>

{% if form.vars.confirm_action %}
<div class="modal fade" id="{{ form.vars.id }}-modal" tabindex="-1" role="dialog" aria-labelledby="{{ form.vars.id }}-modal">
<div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title" id="{{ form.vars.id }}-modal-label">{{ "@fields.fileupload.dropzone.title"|trans }}</h4>
        </div>
        <div class="modal-body" id="{{ form.vars.id}}-text"></div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" id="{{ form.vars.id }}-dismiss" data-dismiss="modal">{{ "@fields.fileupload.dropzone.button.cancel"|trans }}</button>
            <button type="button" class="btn btn-primary" id="{{ form.vars.id }}-confirm">{{ "@fields.fileupload.dropzone.button.confirm"|trans }}</button>
        </div>
    </div>
</div>
</div>
{% endif %}

{%- endblock -%}

{%- block associationfile_widget -%}
    {% for childForm in form.children %}
        {% set attr = childForm.vars.attr|merge({'data-entry-id': form.vars.entityId }) %}
        {{ form_widget(childForm, {attr:attr}) }}
    {% endfor %}
{% endblock associationfile_widget %}

{%- block associationfile_label -%}
    {{ form_label(form, null, {'required': required})}}
{% endblock associationfile_label %}

{%- block association_label -%}
    {{ form_label(form, null, {'required': form.vars.multiple ? false : required}) }}
{%- endblock -%}

{%- block association_widget -%}
    {% set attr = attr | filter((v, k) => k != 'class' and v != 'form-control') %}
    {{ form_widget(form, {attr:attr}) }}
{%- endblock -%}
{%- block association_row -%}

    {% set hiddenOnly = true %}
    {% for formChild in form.children %}
        {% set hiddenOnly = not hiddenOnly ? hiddenOnly : ("hidden" in formChild.vars.block_prefixes) %}
    {% endfor %}

    {% if form.parent.parent is null and multiple %}

        {% if form.children is iterable %}
             {# e.g. OneToMany relations result in such one-size array structure..
                     it is not clear to me why sometimes it does and sometimes not.. #}
            {% set formChild = form.children|first %}
        {% else %}
            {% set formChild = form.children %}
        {% endif %}

        {% if formChild.vars.prototype is defined and not formChild.vars.prototype.rendered %}
            {% set prototype_row = form_row(formChild.vars.prototype, {attr:{"class": "form-control"}}) %}
            {% set attr = attr|merge({ 'data-prototype': prototype_row}) %}
        {% endif %}

        {% set attr = attr|merge({
            'data-collection-field': 'true',
            'data-allow-add': formChild.vars.allow_add ? 'true' : 'false',
            'data-allow-delete': formChild.vars.allow_delete ? 'true' : 'false',
            'data-num-items': formChild.children|length,
            'data-form-type-name-placeholder': formChild.vars.prototype is defined ? formChild.vars.prototype.vars.name : '',
            'data-empty-collection': block('collection2_empty')
        }) %}

        {% set attr = attr | filter((v, k) => k != 'class' and v != 'form-control')%}

        {%- set row_attr = row_attr|merge({'class': 'field-association' ~ (row_attr.class is defined ? ' ' ~ row_attr.class : '')} ) -%}
        <div {% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
            {% if row_group %}
                {%- set attr = attr|merge({'class': 'form-collection  form-group-row ' ~ (not form.vars.group ? "form-collection-plain") ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
                {{ form_label(form)}}
                <div {{ block('widget_attributes') }}>
                    {{ form_widget(formChild) }}
                </div>
            {% else %}
                {{ form_widget(form, {attr: attr}) }}
            {% endif %}
        </div>

    {% else %}

        {% set attr = attr | filter((v, k) => k != 'class' and v != 'form-control')%}
        {%- set attr = attr|merge({'class': 'form-group form-entity' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
        {%- set attr = attr|merge({'class': (hiddenOnly ? "hidden" : "") ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}

        {% if group %}
            {# {% set label = form_label(form) %} #}
            {# {% if label is empty %} #}
            {{ form_widget(form, {attr: attr}) }}
            {# {% else %}
                <fieldset>
                    <legend>{{ label|raw }}</legend>
                    {{ form_widget(form, {attr: attr}) }}
                </fieldset>
            {% endif %} #}
        {% else %}

            <div class="form-association form-group">
                {{ form_label(form)}}
                <div {{ block('widget_attributes') }}>
                    {{ form_widget(form) }}
                </div>
            </div>
        {% endif %}
    {% endif %}

{%- endblock -%}

{%- block collection2_row -%}

    {% if prototype is defined and not prototype.rendered %}
        {% set prototype_row = form_row(prototype, {attr:{"class": "form-control"}}) %}
        {% set attr = attr|merge({ 'data-prototype': prototype_row}) %}
    {% endif %}

    {% set attr = attr|merge({
        'data-collection-field': 'true',
        'data-allow-add': allow_add,
        'data-allow-delete': allow_delete,
        'data-num-items': form.children|length,
        'data-form-type-name-placeholder': prototype is defined ? prototype.vars.name : '',
        'data-empty-collection': block('collection2_empty')
    }) %}

    {%- set attr = attr | filter((v, k) => k != 'class' and v != 'form-control') -%}
    {%- set attr = attr|merge({'class': 'form-collection' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}

    {% set group = form.vars.group %}
    {% if group == true %}

        <div {% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
            {{ form_label(form)}}
            <div {{ block('widget_attributes') }}>
                {{ form_widget(form) }}
            </div>
        </div>
    {% else %}
        {{ form_widget(form) }}
    {% endif %}

{%- endblock collection2_row -%}

{%- block collection2_label -%}
    {{ form_label(form, null, {'required': false}) }}
{%- endblock -%}

{%- block collection2_widget -%}

    {# the "is iterable" check is needed because if an object implements __toString() and
               returns an empty string, "is empty" returns true even if it's not a collection #}
    {% set isEmptyCollection = value is null or (value is iterable and value is empty) %}
    {% if isEmptyCollection %}
        {{ block('collection2_empty') }}
    {% else %}
        {% set attr = attr|merge({'class': 'form-collection-items' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) %}
        {% if allow_add == false %}
            {% set attr = attr|merge({'class': 'form-collection-no-add-button' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) %}
        {% endif %}
        {{ form_widget(form, {attr: attr}) }}
    {% endif %}

    {% if group and allow_add %}
        <button type="button" class="btn btn-link form-collection-add-button">
            <i class="fa-solid fa-plus pr-1"></i>
            {{ '@EasyAdminBundle.action.add_new_item'|trans }}
        </button>
    {% endif %}

{%- endblock collection2_widget -%}

{%- block collection2_entry_row -%}{{ form_row(form) }}{%- endblock collection2_entry_row -%}
{%- block collection2_entry_label -%}{# Empty label on purpose #}{%- endblock -%}
{%- block collection2_entry_widget -%}

    {% set group = form_parent(form).vars.group ?? false %}
    {% set row_group = form_parent(form).vars.row_group ?? false %}
    {% set collapsed = form_parent(form).vars.entry_collapsed ?? true %}

    {% set href = form.vars.href ?? null %}
    {% if is_granted("ROLE_ADMIN") %}
        {% set href = href ?? (form.vars.value == "" ? null : app.ea.crudify(form.vars.value)) %}
        {% if href is iterable %}
            {% set href = form.vars.value ? (href[get_class(form.vars.value)] ?? null) : null %}
            {% set href = href|url_decode %}
        {% endif %}
        {% set href = href ? href|url_encode : null %}
        {% endif %}

    {% if group %}

        {% set allows_deleting_items = form_parent(form).vars.allow_delete %}
        {% set delete_item_button %}
            <button type="button" class="btn btn-link btn-link-danger form-collection-delete-button"
                    title="{{ 'action.remove_item'|trans({}, 'EasyAdminBundle') }}">
                <i class="fa-regular fa-fw fa-trash-alt"></i>
            </button>
        {% endset %}

        <div class="accordion form-collection-item">
            <div class="accordion-item">
                <div class="accordion-header" id="{{ id }}-heading" >

                    {# `is_empty` is used because some internal keys are marked by a starting "_" #}
                    {% set is_empty = empty(form.children|keys|filter((v, k) => not str_starts_with(v, '_') )) %}
                    {% set _href    =  href is iterable and form.vars.value is not null ? href[get_class(form.vars.value)] : href %}
                    {% set linkable = _href is not null and form.vars.value is not null and is_empty %}

                    {% set html = form_parent(form).vars.html and form.vars.value is not null and method_exists(form.vars.value, "__autocomplete") %}
                    {%- if linkable and not html and _href -%}
                    <a target='_blank' class="accordion-button {{ collapsed ? 'collapsed' : ''}}" href="{{ _href|url_decode|replace({'{0}': (form.vars.value.id)}) }}">
                    {%- else -%}
                    <button class="accordion-button {{ collapsed ? 'collapsed' : ''}}" {{ is_empty ? 'style="cursor:default;"' : '' }}
                            type="button" data-bs-toggle="collapse" data-bs-target="#{{ id }}-collapse" aria-expanded="{{ collapsed ? false : true}}" aria-controls="{{ id }}-collapse">
                    {%- endif -%}
                        &nbsp;
                    {%- if linkable and not html -%}
                    <i class="fa-solid fw fa-chevron-right form-collection-item-collapse-marker"></i>
                    {% endif %}
                    {% if html %}
                        {{form.vars.value.__autocomplete|raw }}
                    {% else %}
                        {% set label = form_parent(form).vars.entry_label ?? null %}
                        {% set label = is_callable(label) ? call_user_func_with_defaults(label, form.vars.label ? form.vars.label : form.vars.name|number_format, form.vars.value ?? form_parent(form).vars.entry_options.data_class ?? null) : null %}
                        {% if  label != false %}{{ label|default(value)|stringify }}{% endif %}
                    {% endif %}

                    {{ linkable and not form_parent(form).vars.html and _href ? "</a>": "</button>" }}

                    <div class="form-collection-buttons">
                        {% if form.vars.value is not null and not html %}

                            {% set url = method_exists(form.vars.value, "__toLink") ? form.vars.value.__toLink() : null %}
                            {% if url is not empty %}
                                {{ url ? clipboard("copy", url)|raw : "" }}
                                <a href="{{ url }}" target="_blank" >{{ "fa-solid fa-fw fa-eye" | iconify|first|raw}}</a>
                            {% endif %}

                            {% if _href is not null %}
                            <a target="_blank" href="{{ _href|url_decode|replace({'{0}': form.vars.value.id}) }}">{{ "fa-solid fa-fw fa-external-link-square-alt" | iconify|first|raw}}</a>
                            {% endif %}

                        {% endif %}

                        {% if allows_deleting_items %}
                            {{ delete_item_button }}
                        {% endif %}
                    </div>
                </div>

                <div id="{{ id }}-collapse" class="accordion-collapse collapse  {{ collapsed or is_empty ? '' : 'show'}}">
                    <div class="accordion-body">{{ form_widget(form, {attr:attr}) }}</div>
                </div>
            </div>
        </div>

    {% else %}

        {% if row_group %}

            {% set label = form_parent(form).vars.entry_label %}
            {% set label = is_callable(label) ? call_user_func_with_defaults(label, form.vars.label ? form.vars.label : form.vars.name|number_format, form.vars.value ?? form_parent(form).vars.entry_options.data_class ?? null) : null %}
            {% if  label != false %}
                <label>
                    {{ label|default(value)|stringify }}
                    {% set _href    =  href is iterable and form.vars.value is not null ? href[get_class(form.vars.value)] : href %}
                    {% if form.vars.value is defined %}

                        {% set url = method_exists(form.vars.value, "__toLink") ? form.vars.value.__toLink() : null %}
                        {% if url is not empty %}
                            {{ url ? clipboard("copy", url)|raw : "" }}
                            <a href="{{ url }}" target="_blank" >{{ "fa-solid fa-fw fa-eye" | iconify|first|raw}}</a>
                        {% endif %}

                        {% if _href is not null %}
                        <a target='_blank' href="{{ _href|url_decode|replace({'{0}': form.vars.value.id}) }}">{{ "fa-solid fa-fw fa-external-link-square-alt" | iconify|first|raw}}</a>
                        {% endif %}

                    {% endif %}
                </label>
            {% endif %}

            <div class="form-collection-group">{{ form_widget(form, {attr:attr}) }}</div>

        {% else %}
            {{ form_widget(form, {attr:attr}) }}
        {% endif %}

    {% endif %}

{%- endblock collection2_entry_widget -%}

{%- block collection2_empty -%}
    <div class="empty collection-empty"><div class="form-text">{{ '@fields.collection.empty'|trans }}</div></div>
{%- endblock collection2_empty -%}

{%- block array_row -%}

    {% if prototype is defined and not prototype.rendered %}
        {% set prototype_row = form_row(prototype, {attr:{"class": "form-inline"}}) %}
        {% set attr = attr|merge({ 'data-prototype': prototype_row}) %}
    {% endif %}

    {% set attr = attr|merge({
        'data-array-field': 'true',
        'data-allow-add': allow_add ? 'true' : 'false',
        'data-allow-delete': allow_delete ? 'true' : 'false',
        'data-num-items': form.children|length,
        'data-form-type-name-placeholder': prototype is defined ? prototype.vars.name : '',
        'data-empty-array': block('array_empty')
    }) %}

    {% set attr = attr | filter((v, k) => k != 'class' and v != 'form-control')%}
    {%- set attr = attr|merge({'class': 'form-array' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}

    {% if form.children is not empty or allow_add != false or form.vars.pattern is not empty %}
    <div class="form-group">
        <span>{{- form_label(form) -}}</span>

        {% if form.vars.pattern is not empty and form.vars.prototype|default([]) is empty %}
            <div class="input-group mb-3">
                {% set pattern = pattern|preg_split("/{[0-9]*}/") %}
                {% for key,formChild in form %}
                    {% set prevPattern = pattern[key] ?? "" %}
                    {% if prevPattern is not empty %}
                        <div class="input-group-text">{{prevPattern}}</div>
                    {% endif %}
                    {{ form_widget(formChild) }}
                {% endfor %}

                {% if pattern|last is not empty %}
                    <div class="input-group-text">{{ pattern|last }}</div>
                {% endif %}
            </div>
        {% else %}
            <div {{ block('widget_attributes') }}>
                {{ form_widget(form) }}
            </div>
        {% endif %}
    </div>
    {% endif %}

{%- endblock array_row -%}

{%- block array_label -%}
    {{ form_label(form, null, {'required': false}) }}
{%- endblock -%}

{%- block array_widget -%}

    {# the "is iterable" check is needed because if an object implements __toString() and
               returns an empty string, "is empty" returns true even if it's not a array #}

    {% set isEmptyCollection = value is null or (value is iterable and value is empty) %}
    {% if  isEmptyCollection %}
        {{ block('array_empty') }}
    {% else %}
        {% set attr = attr|merge({'class': 'form-array-items' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) %}
        {{ form_widget(form, {attr: attr}) }}
    {% endif %}

    {% if allow_add %}
        <button type="button" class="btn btn-link form-array-add-button">
            <i class="fa-solid fa-plus pr-1"></i>
            {{ '@EasyAdminBundle.action.add_new_item'|trans }}
        </button>
    {% endif %}

{%- endblock array_widget -%}

{%- block array_entry_row -%}
    {{ form_widget(form) }}
{%- endblock array_entry_row -%}

{%- block array_entry_widget -%}

    {% set pattern = form_parent(form).vars.pattern|default("") %}
    {% set prototype = form_parent(form).vars.prototype|default([]) %}
    {% set placeholder = form_parent(form).vars.placeholder|default([])%}
    {% set key = form.vars.name|intval %}

    {% if key in placeholder|keys and placeholder[key] is not empty %}
        {% set attr = attr|merge({'placeholder': placeholder[key]}) %}
    {% endif %}

    {% if pattern is not empty and prototype is empty %}

        {{ form_widget(form, {attr:attr}) }}

    {% else %}

        {% set allows_deleting_items = form_parent(form).vars.allow_delete %}
        {% set delete_item_button %}
            <button type="button" tabindex="-1" class="btn btn-link btn-link-danger form-array-delete-button"
                    title="{{ 'action.remove_item'|trans({}, 'EasyAdminBundle') }}">
                <i class="fa-regular fa-fw fa-trash-alt"></i>
            </button>
        {% endset %}

        <div class="accordion form-array-item">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" tabindex="-1" type="button" data-bs-toggle="collapse" data-bs-target="#{{ id }}-collapse">
                        <i class="fa-solid fa-fw fa-chevron-right form-array-item-collapse-marker"></i>

                        {% if  form_parent(form).vars.associative %}
                            {%- set attr = attr | filter((v, k) => k != 'class' and v != 'form-control') -%}
                            {%- set attr = attr|merge({'class': 'form-inline' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
                        {% else %}
                            {%- set attr = attr|merge({'class': 'form-control' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
                        {% endif %}

                        {{ form_widget(form, {attr:attr}) }}
                    </button>

                    {% if allows_deleting_items %}
                        {{ delete_item_button }}
                    {% endif %}
                </h2>
            </div>
        </div>
    {% endif %}

{%- endblock array_entry_widget -%}

{%- block array_empty -%}
    <div class="empty array-empty">
        {% if not form.vars.allow_add %}
        <button tabindex="-1" class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#{{ id }}-collapse">
            <i class="fa-solid fw fa-chevron-right form-array-item-collapse-marker"></i>
            {{"@fields.array.empty"|trans}}
        </button>
        {% endif %}
    </div>
{%- endblock array_empty -%}

{%- block stock_widget -%}

{# Search for target inside form based on parent including translation #}
{% set targetForm = form.vars.ancestor %}
{% for child in target %}

    {% set targetForm = targetForm[child] %}

    {% if child == "translations" %}
        {% if targetForm.vars.default_locale is defined and targetForm.vars.default_locale in targetForm|keys %}
            {% set targetForm = targetForm[targetForm.vars.default_locale] %}
        {% else %}
            {% set targetForm = targetForm|first %}
        {% endif %}
    {% endif %}
{% endfor %}

{% set attr = attr|merge({
    'data-stock-field': form.vars.id,
    'data-stock-unlimited': "@fields.stock.unlimited"|trans,
    "data-stock-up": form.vars.stepUp ?? 1,
    "data-stock-down": form.vars.stepDown ?? 1,
    'data-stock-target': targetForm.vars.id,
    "data-stock-min": form.vars.min is defined and form.vars.max > 0 ? form.vars.max : 0,
}) %}

{% if form.vars.max is defined %}
    {% set attr = attr|merge({"data-stock-max": form.vars.max}) %}
{% endif %}

<div class="input-group form-stock">
    <div class="input-group-text">
        <button class="btn btn-outline-secondary" id="{{form.vars.id}}-btn" type="button">
            <i class="fa-solid fa-box-open"></i>
        </button>
    </div>
    {% if form.vars.target is not null %}
    <div class="input-group-text" id="{{form.vars.id}}-current">0</div>
    <div class="input-group-text">/</div>
    {% endif %}
    {{ form_widget(form, {attr:attr}) }} {# NumberType is returning and input type text... #}
    {# <input type="number" {% with {attr: attr} %}{{ block('attributes') }}{% endwith %} id="{{form.vars.id}}"  name="{{form.vars.id}}" value="{{form.vars.value}}"> #}
    <div class="input-group-text">
        <button class="btn btn-outline-secondary" id="{{form.vars.id}}-down" type="button"><i class="fa-solid fa-minus"></i></button>
    </div>
     <div class="input-group-text">
        <button class="btn btn-outline-secondary" id="{{form.vars.id}}-up" type="button"><i class="fa-solid fa-plus"></i></button>
    </div>
</div>

{%- endblock -%}

{%- block number2_widget -%}

{% set attr = attr|merge({
    'data-number-field': form.vars.id,
    "data-number-keyup": form.vars.keyUp,
    "data-number-keydown": form.vars.keyDown,
    "data-number-up": form.vars.stepUp ?? 1,
    "data-number-divisor": form.vars.divisor ?? 1,
    "data-number-down": form.vars.stepDown ?? 1,
    "data-number-up-throttle": form.vars.throttleUp ?? 0,
    "data-number-down-throttle": form.vars.throttleDown ?? 0,
    "autocomplete" : form.vars.autocomplete ? "on" : "off"
}) %}

{% if form.vars.disabled %}
    {% set attr = attr|merge({"disabled": form.vars.disabled}) %}
{% endif %}

{% if form.vars.min    is defined %}{% set attr = attr|merge({"data-number-min": form.vars.min})       %}{% endif %}
{% if form.vars.max    is defined %}{% set attr = attr|merge({"data-number-max": form.vars.max})       %}{% endif %}
{% if form.vars.suffix is defined %}{% set attr = attr|merge({"data-number-suffix": form.vars.suffix}) %}{% endif %}
{% if form.vars.prefix is defined %}{% set attr = attr|merge({"data-number-prefix": form.vars.prefix}) %}{% endif %}

<div class="input-group form-number">

    {% if form.vars.inline  %}
    <div class="input-group-prepend">
        <span class="input-group-text">
            {{ form_label(form)}}
        </span>
    </div>
    {% endif %}

    {{ form_widget(form, {attr:attr}) }} {# NumberType is returning and input type text... #}
    {# <input type="number" {% with {attr: attr} %}{{ block('attributes') }}{% endwith %} id="{{form.vars.id}}"  name="{{form.vars.id}}" value="{{form.vars.value}}"> #}

    <div class="input-group-text">
        <button class="btn btn-outline-secondary" {{form.vars.disabled ? "disabled=disabled" : ""}} id="{{form.vars.id}}-down" type="button"><i class="fa-solid fa-minus"></i></button>
    </div>
     <div class="input-group-text">
        <button class="btn btn-outline-secondary" {{form.vars.disabled ? "disabled=disabled" : ""}} id="{{form.vars.id}}-up" type="button"><i class="fa-solid fa-plus"></i></button>
    </div>
</div>

{%- endblock -%}

{%- block cropper_widget -%}

{# Search for target inside form based on parent including translation #}
{% set targetForm = form.vars.ancestor %}
{% for child in target %}

    {% set targetForm = targetForm[child] %}

    {% if child == "translations" %}
        {% if targetForm.vars.default_locale is defined and targetForm.vars.default_locale in targetForm|keys %}
            {% set targetForm = targetForm[targetForm.vars.default_locale] %}
        {% else %}
            {% set targetForm = targetForm|first %}
        {% endif %}
    {% endif %}
{% endfor %}

{% set quadrantForm = form.vars.ancestor %}
{% for child in quadrant %}

    {% set quadrantForm = quadrantForm[child] %}

    {% if child == "translations" %}
        {% if quadrantForm.vars.default_locale is defined and quadrantForm.vars.default_locale in quadrantForm|keys %}
            {% set quadrantForm = quadrantForm[quadrantForm.vars.default_locale] %}
        {% else %}
            {% set quadrantForm = quadrantForm|first %}
        {% endif %}
    {% endif %}
{% endfor %}

{% set attr = attr|merge({
    'data-cropper': form.vars.cropper,
    'data-cropper-field': form.vars.id
}) %}

{% if form.vars.quadrant is not null %}
    {% set attr = attr|merge({
        'data-cropper-quadrant': quadrantForm.vars.id,
        'data-cropper-positions': quadrantForm.parent ? quadrantForm.parent.vars.positions : null
    }) %}
{% endif %}

{# todo: handle xhr errors #}
{# 'data-cropper-err': "<div id='"~form.var.id~"'>"~('fa-solid fa-fw fa-exclamation-circle'|iconify|first|raw)~" "~('@fields.cropper.error')~"</div>", #}
<div class="form-group form-cropper {{ cropper_info ? "form-cropper-info" : "" }}">
    <div class="cropper">
        <img id="{{ id }}_image" class="hidden" src="{{targetForm.vars.value|thumbnail(1000,1000)}}">
        <div id="{{ id }}_loader" class="loader">
            {% if targetForm.vars.value is not empty%}
                <div class="loader-spinner"></div> {{ '@fields.cropper.loading.wait'|trans }}
            {% else %}
                {{ '@fields.cropper.no_image'|trans }}
            {% endif %}
            </div>

        {% if cropper_actions %}
        <div class="hidden cropper-actions" id="{{ id }}_actions">
            <button class="btn btn-warning" type="button" data-cropper-reset="true">{{"fa-solid fa-undo"|iconify|first|raw}}</button>
            {% for label,aspectRatio in form.vars.aspectRatios %}
                <button class="btn btn-primary" type="button" data-aspect-ratio="{{aspectRatio}}" data-labelledby="{{form.vars.id ~ "_label"}}" data-labelledby-value="{{ label|trans }}">{{ label|trans }}</button>
            {% endfor %}

            {% if form.vars.aspectRatios is defined and form.vars.aspectRatios is not empty %}
                <button class="btn btn-primary" type="button" data-aspect-ratio="NAN" data-labelledby="{{form.vars.id ~ "_label"}}" data-labelledby-value="">{{ "@fields.cropper.aspect_ratio.free"|trans }}</button>
            {% endif %}
        </div>
        {% endif %}
    </div>

    {%- set attr = attr|merge({'class': 'form-cropper-fields' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
    {%- set attr = attr|merge({'disabled': 'disabled' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
    {{ form_widget(form, {attr:attr}) }}
</div>

{% set isNormalized = form.is_normalized.vars.value ? true : false %}
{% set isEmpty = not form.x0.vars.value and not form.y0.vars.value and not form.width0.vars.value and not form.height0.vars.value %}

{% if not isNormalized and not isEmpty %}
<hr>
<div class="form-text text-muted text-danger">{{"@fields.cropper.not_normalized"|trans}}</div>
{% endif %}

{%- endblock -%}

{%- block quadrant_widget -%}

{% set nquadrants = count(form.vars.quadrants)-1 %}
{% set quadrants  = nquadrants < 8 ? "" : nquadrants %}
<div id="{{id}}_matrix">
{% include '@Base/form/quadrant/quadrant'~quadrants~'.html.twig' %}
</div>

{%- set attr = attr|merge({'class': 'form-quadrant' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}

{% set attr = attr|merge({
    'data-quadrant-field': form.vars.id,
    'data-quadrant-winds': nquadrants
}) %}

{{ form_widget(form.wind, {attr:attr, value:form.vars.value ?? form.vars.default}) }}

{%- endblock -%}

{%- block password2_row -%}

    {% set attr = attr|merge({
        'data-password-field': form.vars.id,
        'data-password-strength': '@fields.password.strength.label'|trans|raw,
        'data-password-strength-name[0]': '@fields.password.strength.bad.label'|trans|raw,
        'data-password-strength-name[1]': '@fields.password.strength.poor.label'|trans|raw,
        'data-password-strength-name[2]': '@fields.password.strength.weak.label'|trans|raw,
        'data-password-strength-name[3]': '@fields.password.strength.good.label'|trans|raw,
        'data-password-strength-name[4]': '@fields.password.strength.strong.label'|trans|raw,
        'data-password-strength-message[0]': '@fields.password.strength.bad.message'|trans|raw,
        'data-password-strength-message[1]': '@fields.password.strength.poor.message'|trans|raw,
        'data-password-strength-message[2]': '@fields.password.strength.weak.message'|trans|raw,
        'data-password-strength-message[3]': '@fields.password.strength.good.message'|trans|raw,
        'data-password-strength-message[4]': '@fields.password.strength.strong.message'|trans|raw,
        'data-password-autocomplete': form.vars.autocomplete ? "on" : "new-password",
        'data-password-match': "@validators.password.not_matching"|trans(),
        'data-password-allow-empty': not form.vars.required ? "true" : "",
        'data-password-minstrength': form.vars.min_strength,
        'data-password-minstrength[feedback]': "@validators.password.min_strength"|trans([form.vars.min_strength]),
        'data-password-minlength': form.vars.min_length,
        'data-password-minlength[feedback]': "@validators.password.min_length"|trans([form.vars.min_length])
    }) %}

    {%- set attr = attr | filter((v, k) => k != 'class' and v != 'form-control') -%}
    {%- set attr = attr|merge({'class': 'form-password' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
    {% if repeater %}
        {%- set attr = attr|merge({'class': 'form-repeater' ~ (attr.class is defined ? ' ' ~ attr.class : '')} ) -%}
    {% endif %}
    {% if not form.vars.inline %}
        {%- set row_attr = row_attr|merge({'class': 'form-group form-password-block' ~ (row_attr.class is defined ? ' ' ~ row_attr.class : '')} ) -%}
    <div {{ html_attributes(row_attr) }}>
        <div class="form-password-details" id="{{ form.vars.id}}_details">
            <div class="main">
                <p class="strength-label"><br/></p>
                <p class="strength-message form-text text-muted"><br/></p>
                <hr>
                <div>{{ '@fields.password.requirements.label'|trans }}</div>
                <ul>
                    <li>{{ 'fa-solid fa-times-circle'|iconify({'class': 'uncheck'})|first|raw }} {{ '@fields.password.requirements.uppercase'|trans }}</li>
                    <li>{{ 'fa-solid fa-times-circle'|iconify({'class': 'uncheck'})|first|raw }} {{ '@fields.password.requirements.lowercase'|trans }}</li>
                    <li>{{ 'fa-solid fa-times-circle'|iconify({'class': 'uncheck'})|first|raw }} {{ '@fields.password.requirements.numbers'  |trans }}</li>
                    <li>{{ 'fa-solid fa-times-circle'|iconify({'class': 'uncheck'})|first|raw }} {{ '@fields.password.requirements.specials' |trans }}</li>
                    <li>{{ 'fa-solid fa-times-circle'|iconify({'class': 'uncheck'})|first|raw }} {{ '@fields.password.requirements.length12' |trans }}</li>
                </ul>
            </div>
            <footer>
                <hr>
                <div class="form-text text-muted">
                {% if not form.vars.required and form.vars.hint %}{{"@fields.password.unchanged"|trans}}{% endif %}
                </div>
                <div class="form-text text-muted">
                {% if form.vars.min_length %}{{"@fields.password.requirements.min_length"|trans([form.vars.min_length])}}{% endif %}
                </div>
                <div class="form-text text-muted">
                {% if form.vars.min_strength %}{{"@fields.password.requirements.min_strength"|trans([form.vars.min_strength])}}{% endif %}
                </div>
            </footer>
        </div>
    {% endif %}

        <div {{ html_attributes(attr) }}>
            <div class="form-group">

                {{ form_label(form.plain) }}
                <div class="input-group">
                    <span class="input-group-text">{{ (form.vars.repeater ? 'fa-solid fa-unlock' : 'fa-solid fa-lock')|iconify|first|raw }}</span>
                    {% if form.vars.revealer %}{{ 'fa-solid fa-eye'|iconify({'class':'form-password-revealer', 'id': form.vars.id~"_revealer"})|first|raw }}{% endif%}

                    {{ form_widget(form.plain, {
                        required:form.vars.required,
                        value:form.vars.revealer and not form.vars.secure ? form.vars.value : "",
                        attr: {'autocomplete': form.vars.autocomplete ? "autocomplete" : "new-password"}
                    }) }}
                </div>

                <div class="form-password-strength" id="{{form.vars.id}}_strength">
                {% for i in range(1,form.vars.max_strength+1) %}
                    {% if i < form.vars.max_strength+1 %}
                    <span class="strength" id="{{form.vars.id}}_strength_{{i}}"></span>
                    {% endif %}
                {% endfor %}
                </div>

                {% if (not form.vars.secure and app.debug) %}
                    <div class="form-text text-muted text-danger">{{"@fields.password.unsecure"|trans}}</div>
                {% endif %}

                {% if form.vars.inline %}
                    {% if (not form.vars.required and form.vars.hint) %}
                    <div class="form-text text-muted">{{"@fields.password.unchanged"|trans}}</div>
                    {% endif %}
                    {% if form.vars.min_length %}
                    <div class="form-text text-muted">{{"@fields.password.requirements.min_length"|trans([form.vars.min_length])}}</div>
                    {% endif %}
                    {% if form.vars.min_strength > 0 %}
                    <div class="form-text text-muted">{{"@fields.password.requirements.min_strength"|trans([form.vars.min_strength])}}</div>
                    {% endif %}
                {% endif %}

            </div>
            {% if form.vars.repeater %}
            <div class="form-group">
                {{ form_label(form.plain_repeater) }}

                <div class="input-group">
                    <span class="input-group-text">{{ 'fa-solid fa-lock'|iconify|first|raw }}</span>
                    {{ form_widget(form.plain_repeater, {
                        required:form.vars.required,
                        value:form.vars.revealer and not form.vars.secure ? form.vars.value : "",
                        attr:{'autocomplete': form.vars.autocomplete ? "autocomplete" : "new-password"}
                    }) }}
                </div>
            </div>
            {% endif %}
        </div>
    {% if not form.vars.inline %}
    </div>
    {% endif %}

{%- endblock -%}

{%- block money_widget -%}

{# Search for target inside form based on parent including translation #}
{% set currencyForm = form.parent %}
{% for child in currency_target %}

    {% set currencyForm = currencyForm[child] %}

    {% if child == "translations" %}
        {% if currencyForm.vars.default_locale is defined and currencyForm.vars.default_locale in currencyForm|keys %}
            {% set currencyForm = currencyForm[currencyForm.vars.default_locale] %}
        {% else %}
            {% set currencyForm = currencyForm|first %}
        {% endif %}
    {% endif %}
{% endfor %}

{% set attr = attr|merge({
    'data-currency-field': currencyForm.vars.id,
    'data-scale-field': form.vars.scale ?? ''
}) %}

<div class="input-group form-money">

    {{ block('form_widget') }}
    <div class="input-group-append">
        {% set currency_list = form.vars.currency_list is defined ? form.vars.currency_list : [] %}
        {%  if currency_list is empty or currency_list is not iterable %}
            <button id="{{form.vars.id}}-btn" class="input-group-text" type="button">
                {{form.vars.currency_pattern|trans({"{{ widget }}":""})|trim}}
                {{form.vars.currency_label ?? ""|trim}}
            </button>
        {% else %}
            {% set code     = currency %}
            {% set currency_list = currency_list|filter(c => c != code) %}

            {% set label    = currency_label[code] ?? code %}
            {% set exchange = currency_exchange[code] ?? 1 %}
            <button id="{{form.vars.id}}-btn" class="input-group-text {{ currency_list is not empty ? "dropdown-toggle" : "" }}" type="button" data-bs-toggle="dropdown" aria-expanded="false">{{label}}</button>
            {% if currency_list is not empty %}
            <ul id="{{form.vars.id}}-list" class="dropdown-menu dropdown-menu-end" >

                <li id="{{form.vars.id}}-selected" class="item-selected" data-label="{{label}}" data-code="{{code}}" data-exchange="{{ exchange }}"><a class="dropdown-item">{{label}}</a></li>
                <li><hr class="dropdown-divider"></li>

                <li class="item" data-label="{{label}}" data-code="{{code}}" data-exchange="1.0"><a class="text-right dropdown-item">{{label}}</a></li>
                {% for code in currency_list %}
                    {% set label    = currency_label[code] ?? code %}
                    {% set exchange = currency_exchange[code] ?? 1 %}
                    <li class="item" data-label="{{label}}" data-code="{{code}}" data-exchange="{{ exchange }}"><a class="text-right dropdown-item">{{label}}</a></li>
                {% endfor %}
            </ul>
            {% endif %}
        {% endif %}
    </div>
</div>

{%- endblock -%}

{% block colorpickr_widget %}
{% set attr = attr|merge({
        'data-color-field': form.vars.id
    })
%}

{{ form_widget(form, {attr: attr}) }}
{% endblock %}

{% block emojipickr_widget %}

{% set attr = attr|merge({
        'data-emoji-field': form.vars.id,
        'renderer': form.vars.renderer
    })
%}

{{ form_widget(form, {attr: attr}) }}
{% endblock %}
